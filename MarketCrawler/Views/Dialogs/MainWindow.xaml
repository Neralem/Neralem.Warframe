<dialogs:StylableWindow x:Class="Neralem.Warframe.MarketCrawler.Views.Dialogs.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:dialogs="clr-namespace:Neralem.Wpf.UI.Dialogs;assembly=Neralem.Wpf"
                xmlns:viewModels="clr-namespace:MarketCrawler.ViewModels"
                xmlns:controls="clr-namespace:Neralem.Wpf.UI.Controls;assembly=Neralem.Wpf"
                xmlns:valueConverters="clr-namespace:Neralem.Wpf.ValueConverters;assembly=Neralem.Wpf"
                xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:doMs="clr-namespace:Neralem.Warframe.Core.DOMs;assembly=Neralem.Warframe.Core"
                mc:Ignorable="d" Title="{Binding Title}" WindowStartupLocation="CenterScreen"
                Height="450" Width="900" Style="{StaticResource CustomWindowStyle}" d:DataContext="{d:DesignInstance viewModels:MainVm}">
    <dialogs:StylableWindow.Resources>
        <valueConverters:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter"/>
        <valueConverters:ValueConverterGroup x:Key="InvertedBoolToVisibilityCollapsedConverter">
            <valueConverters:InvertBoolConverter/>
            <valueConverters:BoolToVisibilityCollapsedConverter/>
        </valueConverters:ValueConverterGroup>
        <valueConverters:ValueConverterGroup x:Key="ValueIsGreaterThanToVisibilityCollapsedConverter">
            <valueConverters:ValueIsGreaterThanToBoolConverter/>
            <valueConverters:BoolToVisibilityCollapsedConverter/>
        </valueConverters:ValueConverterGroup>
    </dialogs:StylableWindow.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding Path=UpdateItemsCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <TabControl>
        <TabItem Header="Items">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding ItemSearchString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0"/>
                    <controls:ExtButton Content="Clear Search"  Command="{Binding SearchDeleteCommand}" Grid.Column="1" HorizontalAlignment="Right"/>
                </Grid>
                <DataGrid ItemsSource="{Binding FilteredItems}" Grid.Row="1"
                          AutoGenerateColumns="False" EnableRowVirtualization="True"
                          SelectionMode="Single" SelectionUnit="FullRow" >
                    
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </DataGrid.CellStyle>
                    
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Ducats" Binding="{Binding Ducats, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Preis" Binding="{Binding AveragePrice, Mode=OneWay, StringFormat=N0}"/>
                        <DataGridTemplateColumn Header="Vaulted" SortMemberPath="Item.IsVaulted" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type doMs:Order}">
                                    <CheckBox IsChecked="{Binding IsVaulted, FallbackValue=False, Mode=OneWay}" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Orders">
            <Grid Margin="5">
                <Grid.Resources>
                    
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding OrderSearchString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <controls:ExtButton Content="Clear Search"  Command="{Binding SearchDeleteCommand}" Grid.Column="1" HorizontalAlignment="Right"/>
                </Grid>
                <DataGrid Grid.Row="1" ItemsSource="{Binding FilteredOrders}" AutoGenerateColumns="False" EnableRowVirtualization="True" SelectionMode="Single" SelectionUnit="FullRow">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Item.Name, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Ducats" Binding="{Binding Item.Ducats, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Ducats/Plat" Binding="{Binding DucatsPerPlatinum, Mode=OneWay, StringFormat=N2}"/>
                        <DataGridTemplateColumn Header="Vaulted" SortMemberPath="Item.IsVaulted" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type doMs:Order}">
                                    <CheckBox IsChecked="{Binding Item.IsVaulted, FallbackValue=False, Mode=OneWay}" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Plat" Binding="{Binding UnitPrice, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Total Plat" Binding="{Binding TotalPlat, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Anzahl" Binding="{Binding Quantity, Mode=OneWay}"/>
                        <DataGridTextColumn Header="User" Binding="{Binding User.Name, Mode=OneWay}"/>
                        <DataGridTextColumn Header="Online Status" Binding="{Binding User.OnlineStatus, Mode=OneWay}"/>
                        <DataGridTemplateColumn CanUserResize="False" CanUserSort="False" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type doMs:Order}">
                                    <StackPanel Orientation="Horizontal">
                                        <controls:ExtButton Content="/w" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}, Path=DataContext.WhisperUserCommand}" CommandParameter="{Binding}"/>
                                        <controls:ExtButton Content="/w all" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}, Path=DataContext.WhisperUserBuyAllCommand}" CommandParameter="{Binding}"
                                                            Visibility="{Binding Quantity, Converter={StaticResource ValueIsGreaterThanToVisibilityCollapsedConverter}, ConverterParameter=1}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <Grid Grid.Row="3" Visibility="{Binding IsDownloadingOrders, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                    <ProgressBar Height="20" Minimum="0" Maximum="1" Value="{Binding OrdersUpdateProgress.PercentageDone, Mode=OneWay}"/>
                    <TextBlock Text="{Binding OrdersUpdateProgress.PercentageDone, StringFormat=p0, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
                <controls:ExtButton Grid.Row="4" Content="Update" HorizontalAlignment="Right" Command="{Binding UpdateOrdersCommand}" Visibility="{Binding IsDownloadingOrders, Converter={StaticResource InvertedBoolToVisibilityCollapsedConverter}}"/>
            </Grid>
        </TabItem>
    </TabControl>
</dialogs:StylableWindow>