<UserControl x:Class="MarketCrawler.Views.UserControls.UcItems"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:Neralem.Wpf.UI.Controls;assembly=Neralem.Wpf"
             xmlns:doMs="clr-namespace:Neralem.Warframe.Core.DOMs;assembly=Neralem.Warframe.Core"
             xmlns:viewModels="clr-namespace:MarketCrawler.ViewModels"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:MainVm}"
             d:DesignHeight="450" d:DesignWidth="800">
   
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Text="{Binding ItemSearchString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0"/>
            <controls:ExtButton Content="Clear Search"  Command="{Binding SearchDeleteCommand}" Grid.Column="1" HorizontalAlignment="Right"/>
        </Grid>
        <DataGrid ItemsSource="{Binding FilteredItems}" Grid.Row="1"
                  AutoGenerateColumns="False" EnableRowVirtualization="True"
                  SelectionMode="Single" SelectionUnit="FullRow" >
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Name" SortMemberPath="Name" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type doMs:Item}">
                            <controls:ExtButton Content="{Binding Name}" HorizontalContentAlignment="Left" DoubleClickCommand="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.OpenItemInMarketCommand}" DoubleClickCommandParameter="{Binding}"
                                                Background="Transparent" MouseDownBrush="Transparent" MouseOverBrush="Transparent" BorderThickness="0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Ducats" Binding="{Binding Ducats, Mode=OneWay}"/>
                <DataGridTextColumn Header="∅ Preis" Binding="{Binding AveragePrice, Mode=OneWay, StringFormat=N1}"/>
                <DataGridTemplateColumn Header="Vaulted" SortMemberPath="IsVaulted" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type doMs:Order}">
                            <CheckBox IsChecked="{Binding IsVaulted, FallbackValue=False, Mode=OneWay}" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type doMs:Item}">
                            <controls:ExtButton Content="Add" HorizontalContentAlignment="Left" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.InventoryVm.AddEntryCommand}" CommandParameter="{Binding Name}"
                                                Background="Transparent" MouseDownBrush="Transparent" MouseOverBrush="Transparent" BorderThickness="0">
                                <controls:ExtButton.Triggers>
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard>
                                            <Storyboard Duration="0:0:2">
                                                <ColorAnimation To="Green" 
                                                    Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                                    FillBehavior="HoldEnd"
                                                    Duration="0:0:1"/>
                                                <ColorAnimation  To="Transparent" 
                                                    Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                                    FillBehavior="HoldEnd" 
                                                    BeginTime="0:0:1"
                                                    Duration="0:0:1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </controls:ExtButton.Triggers>
                            </controls:ExtButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>